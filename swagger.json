{
  "openapi": "3.0.1",
  "info": {
    "description": "This is server Ceccoff.",
    "version": "1.0.0",
    "title": "Swagger Ceccoff",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "diegoceccon1544@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],

  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Operations about users",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/v1/users/register": {
      "post": {
        "tags": ["users"],
        "summary": "Add a book to the database",
        "operationId": "book-add",
        "requestBody": {
          "description": "New user signing up",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book was added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/users/find": {
      "get": {
        "tags": ["users"],
        "summary": "Get all books in database",
        "operationId": "book-get-all",
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "books": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookSchema"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorSchema"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do user",
            "example": "Name"
          },
          "lastname": {
            "type": "string",
            "description": "Sobrenome do user",
            "example": "Lastname"
          },
          "document": {
            "type": "string",
            "description": "document",
            "example": "Document number"
          },
          "email": {
            "type": "string",
            "description": "Email user",
            "example": "Email"
          },

          "password": {
            "type": "string",
            "description": "Password user",
            "example": "Password"
          },

          "termsAndConditions": {
            "type": "number",
            "description": "1 - Sim ou 2 - NÃ£o",
            "example": "Term and conditions"
          }
        },
        "required": ["error"]
      },
      "BadRequestSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "PATH: [author] ;; MESSAGE: \"author\" is required"
          }
        },
        "required": ["error"]
      },
      "ServerErrorSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Internal server error"
          }
        },
        "required": ["error"]
      }
    }
  }
}
